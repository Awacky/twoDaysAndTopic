package org.lanqiao.algo.elementary._08dp;

/**
 * @author Awacky
 * @date 2020/4/6 13:54
 */
//区间选点的问题大致可以描述为：
//给定N个区间[a,b]，取尽量少的点，使得每个区间内都至少有一个点（不同区间内含的点可以重复）。
//
//关于贪心算法的验证过程就不再赘述，现在思考一下贪心策略的制定。
//对于区间[a1, b1] 、[a2, b2]、 [a3, b3] 来说，
//如果想选择最少的点，那么必须选择每个区间的右端点，示意图如下：
//    思路，每次都选择最右边的点，才能保证所有的点都在也就是说选的点才是最少的。
    //和之前不相交区间的思考方法类似，把区间进行预处理，按照端点的大小排序（同样，按照右端点排序会好理解一点，但是左端点排序一样可以起到作用，初学者不必迷信右端点排序）。
//预处理过后，求解策略的思路和求不相交区间相似，如果下一个区间的左端点不被覆盖，则答案+1，如下：

//    尽量选择靠右的点。
public class Case04_区间选点问题 {

}
